# Configuration for Cog ⚙️
# Reference: https://github.com/replicate/cog/blob/main/docs/yaml.md

build:
  # set to true if your model requires a GPU
  gpu: false

  # a list of ubuntu apt packages to install
  # system_packages:
  #   - "libgl1-mesa-glx"
  #   - "libglib2.0-0"

  # python version in the form '3.11' or '3.11.4'
  python_version: "3.10"

  # a list of packages in the format <package-name>==<version>
  # python_packages:
  #   - "numpy==1.19.4"
  #   - "torch==1.8.0"
  #   - "torchvision==0.9.0"

  # commands run after the environment is setup
  run:
    # Download Miniconda installer
    - curl -O https://repo.anaconda.com/miniconda/Miniconda3-py310_23.3.1-0-Linux-x86_64.sh

    # Install Miniconda silently and set the installation path to /cog/miniconda
    - bash Miniconda3-py310_23.3.1-0-Linux-x86_64.sh -b -p /cog/miniconda

    # Initialize conda for bash
    - /cog/miniconda/bin/conda init bash

    # Create a new conda environment named 'myenv' with Python 3.10
    - /bin/bash -c "source /cog/miniconda/bin/activate && conda create -n myenv python=3.10 -y"

    # Activate the 'myenv' environment and install NumPy from the conda-forge channel
    - /bin/bash -c "source /cog/miniconda/bin/activate && conda activate myenv && conda install -c conda-forge numpy=1.24.3 -y"

    # Activate the 'myenv' environment and install the cog package using pip
    - /bin/bash -c "source /cog/miniconda/bin/activate && conda activate myenv && pip install cog>=0.7.2"

    # Export the path to ensure the conda environment 'myenv' is activated by default
    - export PATH=/cog/miniconda/envs/myenv/bin:$PATH

# predict.py defines how predictions are run on your model
predict: "predict.py:Predictor"
